<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/jee
         http://www.springframework.org/schema/jee/spring-jee.xsd

">

    <!--    数据源-->
    <!--    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">-->
    <!--        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>-->
    <!--        <property name="url" value="jdbc:mysql:///smbms?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8"/>-->
    <!--        <property name="username" value="root"/>-->
    <!--        <property name="password" value="root"/>-->
    <!--    </bean>-->
    <!--通过属性文件 配置数据源-->
    <bean class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="location" value="classpath:database.properties"/>
    </bean>
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${user}"/>
        <property name="password" value="${password}"/>
    </bean>

    <!--    使用jndi数据源-->
    <!--    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">-->
    <!--        <property name="jndiName" value="java:comp/env/jdbc/smbms"/>-->
    <!--    </bean>-->

    <!--    <jee:jndi-lookup jndi-name="java:comp/env/jdbc/smbms" id="dataSource"></jee:jndi-lookup>-->


    <!--    SqlSessionFactoryBean-->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--        注入数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--读取mybatis配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--读取映射文件-->
        <property name="mapperLocations">
            <array>
                <value>classpath:com/hisoft/springmybatis/dao/**/*.xml</value>
            </array>
        </property>
    </bean>

    <!--sqlSessionTemplate-->
    <!--    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">-->
    <!--        <constructor-arg index="0" ref="sqlSessionFactory"/>-->
    <!--    </bean>-->
    <!--UserMapper-->
    <!--        <bean id="userMapper" class="com.hisoft.springmybatis.dao.user.UserMapper"/>-->

    <!--MapperFactoryBean创建一个映射接口userMapper的实现类对象 注入到容器中 -->
    <!--    <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
    <!--        <property name="mapperInterface" value="com.hisoft.springmybatis.dao.user.UserMapper"/>-->
    <!--        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
    <!--    </bean>-->

    <!--MapperScannerConfigurer 批量创建映射接口的实现类对象 注入倒容器中-->
    <!--        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
    <!--            <property name="basePackage" value="com.hisoft.springmybatis.dao"/>-->
    <!--        </bean>-->


    <!--UserService-->
    <!--    <bean id="userService" class="com.hisoft.springmybatis.service.user.UserServiceImpl">-->
    <!--        <property name="userMapper" ref="userMapper"/>-->
    <!--    </bean>-->
    <!--ProviderMapper-->
    <!--    <bean id="providerMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
    <!--        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
    <!--        <property name="mapperInterface" value="com.hisoft.springmybatis.dao.provider.ProviderMapper"/>-->
    <!--    </bean>-->
    <!--ProviderService-->
    <!--    <bean id="providerService" class="com.hisoft.springmybatis.service.provider.ProviderServiceImpl">-->
    <!--        <property name="providerMapper" ref="providerMapper"/>-->
    <!--    </bean>-->
    <!--BillMapper-->
    <!--    <bean id="billMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
    <!--        <property name="mapperInterface" value="com.hisoft.springmybatis.dao.bill.BillMapper"/>-->
    <!--        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
    <!--    </bean>-->
    <!--BillService-->
    <!--    <bean id="billService" class="com.hisoft.springmybatis.service.bill.BillServiceImpl">-->
    <!--        <property name="billMapper" ref="billMapper"/>-->
    <!--    </bean>-->

    <!--    &lt;!&ndash;ioc注解 开启扫描&ndash;&gt;-->
    <!--    <context:component-scan base-package="com.hisoft.springmybatis"/>-->

    <!--Spring声明式-->
    <!--1.事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!--开启注解管理事务  ransaction-manager默认值为transactionManager-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--2事务增强-->
    <!--    <tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--        &lt;!&ndash;哪些方法有什么样的事务策略&ndash;&gt;-->
    <!--        <tx:attributes>-->
    <!--            <tx:method name="save" isolation="REPEATABLE_READ" propagation="REQUIRED"/>-->
    <!--            <tx:method name="insert" isolation="REPEATABLE_READ" propagation="REQUIRED"/>-->
    <!--            <tx:method name="add" isolation="REPEATABLE_READ" propagation="REQUIRED"/>-->
    <!--            <tx:method name="delete" isolation="REPEATABLE_READ" propagation="REQUIRED"/>-->
    <!--            <tx:method name="del" isolation="REPEATABLE_READ" propagation="REQUIRED"/>-->
    <!--            <tx:method name="update" isolation="REPEATABLE_READ" propagation="REQUIRED"/>-->
    <!--            <tx:method name="get" isolation="READ_COMMITTED" read-only="true" propagation="SUPPORTS"/>-->
    <!--            <tx:method name="query" isolation="READ_COMMITTED" read-only="true" propagation="SUPPORTS"/>-->
    <!--            <tx:method name="find" isolation="READ_COMMITTED" read-only="true" propagation="SUPPORTS"/>-->
    <!--            <tx:method name="*" isolation="READ_COMMITTED" read-only="true" propagation="SUPPORTS"/>-->
    <!--        </tx:attributes>-->
    <!--    </tx:advice>-->
    <!--    &lt;!&ndash;3.切面&ndash;&gt;-->
    <!--    <aop:config >-->
    <!--        &lt;!&ndash;切入点&ndash;&gt;-->
    <!--        <aop:pointcut id="pointcut" expression="execution(public * com.hisoft.springmybatis.service..*.*(..))"/>-->
    <!--        &lt;!&ndash;织入&ndash;&gt;-->
    <!--        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>-->
    <!--    </aop:config>-->
</beans>